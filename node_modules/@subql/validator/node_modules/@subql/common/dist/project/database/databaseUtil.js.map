{"version":3,"file":"databaseUtil.js","sourceRoot":"","sources":["../../../src/project/database/databaseUtil.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAEtC,0CAAyC;AAIlC,KAAK,UAAU,SAAS,CAAC,SAA2B;IACzD,MAAM,MAAM,GAAG,MAAO,SAAiB,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;IAClE,4DAA4D;IAC5D,kDAAkD;IAClD,MAAM,WAAW,GAAG,MAAM,YAAY,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5E,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,mBAAU,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAE,WAAiC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChH,IAAI,CAAC,OAAO,EAAE;QACZ,MAAM,IAAI,KAAK,CAAC,oCAAoC,MAAM,EAAE,CAAC,CAAC;KAC/D;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AAVD,8BAUC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {SUPPORT_DB} from '@subql/common';\nimport {Pool} from 'pg';\nimport {Sequelize} from 'sequelize';\n\nexport async function getDbType(queryFrom: Sequelize | Pool): Promise<SUPPORT_DB> {\n  const result = await (queryFrom as any).query('select version()');\n  //  sequelize return an array,  Promise<[unknown[], unknown]\n  //  pgPool return a single string object with rows\n  const cleanResult = result instanceof Array ? result[0][0] : result.rows[0];\n  const matchDB = Object.values(SUPPORT_DB).find((db) => (cleanResult as {version: string}).version.includes(db));\n  if (!matchDB) {\n    throw new Error(`Database type not supported, got ${result}`);\n  }\n  return matchDB;\n}\n"]}