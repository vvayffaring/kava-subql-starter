{"version":3,"file":"models.js","sourceRoot":"","sources":["../../src/project/models.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {RegisteredTypes, RegistryTypes, OverrideModuleType, OverrideBundleType} from '@polkadot/types/types';\n\nimport {BaseMapping} from '@subql/common';\nimport {\n  EthereumHandlerKind,\n  EthereumDatasourceKind,\n  EthereumLogFilter,\n  SubqlCustomHandler,\n  SubqlMapping,\n  SubqlHandler,\n  SubqlRuntimeHandler,\n  SubqlRuntimeDatasource,\n  SubqlCustomDatasource,\n  FileReference,\n  CustomDataSourceAsset,\n  EthereumBlockFilter,\n  SubqlBlockHandler,\n  SubqlEventHandler,\n  SubqlCallHandler,\n  EthereumTransactionFilter,\n  SubqlDatasource,\n} from '@subql/types-ethereum';\nimport {plainToClass, Transform, Type} from 'class-transformer';\nimport {\n  IsArray,\n  IsEnum,\n  IsInt,\n  IsOptional,\n  IsString,\n  IsObject,\n  ValidateNested,\n  IsEthereumAddress,\n  registerDecorator,\n  ValidationOptions,\n  ValidationArguments,\n} from 'class-validator';\nimport {SubqlEthereumDatasourceKind, SubqlEthereumHandlerKind, SubqlEthereumProcessorOptions} from './types';\n\nexport class BlockFilter implements EthereumBlockFilter {\n  @IsOptional()\n  @IsInt()\n  modulo?: number;\n  @IsOptional()\n  @IsString()\n  timestamp?: string;\n}\n\nexport class LogFilter implements EthereumLogFilter {\n  @IsOptional()\n  @IsArray()\n  topics?: string[];\n}\n\nexport class ChainTypes implements RegisteredTypes {\n  @IsObject()\n  @IsOptional()\n  types?: RegistryTypes;\n  @IsObject()\n  @IsOptional()\n  typesAlias?: Record<string, OverrideModuleType>;\n  @IsObject()\n  @IsOptional()\n  typesBundle?: OverrideBundleType;\n  @IsObject()\n  @IsOptional()\n  typesChain?: Record<string, RegistryTypes>;\n  @IsObject()\n  @IsOptional()\n  typesSpec?: Record<string, RegistryTypes>;\n}\n\nexport class TransactionFilter implements EthereumTransactionFilter {\n  @IsOptional()\n  @IsString()\n  from?: string;\n  @IsOptional()\n  @IsString()\n  to?: string;\n  @IsOptional()\n  @IsString()\n  function?: string;\n}\n\nexport function forbidNonWhitelisted(keys: any, validationOptions?: ValidationOptions) {\n  return function (object: object, propertyName: string) {\n    registerDecorator({\n      name: 'forbidNonWhitelisted',\n      target: object.constructor,\n      propertyName: propertyName,\n      constraints: [],\n      options: validationOptions,\n      validator: {\n        validate(value: any, args: ValidationArguments) {\n          const isValid = !Object.keys(value).some((key) => !(key in keys));\n          if (!isValid) {\n            throw new Error(\n              `Invalid keys present in value: ${JSON.stringify(value)}. Whitelisted keys: ${JSON.stringify(\n                Object.keys(keys)\n              )}`\n            );\n          }\n          return isValid;\n        },\n      },\n    });\n  };\n}\n\nexport class BlockHandler implements SubqlBlockHandler {\n  @IsObject()\n  @IsOptional()\n  @Type(() => BlockFilter)\n  filter?: BlockFilter;\n  @IsEnum(SubqlEthereumHandlerKind, {groups: [SubqlEthereumHandlerKind.FlareBlock, SubqlEthereumHandlerKind.EthBlock]})\n  kind: EthereumHandlerKind.Block;\n  @IsString()\n  handler: string;\n}\n\nexport class CallHandler implements SubqlCallHandler {\n  @forbidNonWhitelisted({from: '', to: '', function: ''})\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => TransactionFilter)\n  filter?: EthereumTransactionFilter;\n  @IsEnum(SubqlEthereumHandlerKind, {groups: [SubqlEthereumHandlerKind.FlareCall, SubqlEthereumHandlerKind.EthCall]})\n  kind: EthereumHandlerKind.Call;\n  @IsString()\n  handler: string;\n}\n\nexport class EventHandler implements SubqlEventHandler {\n  @forbidNonWhitelisted({topics: ''})\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => LogFilter)\n  filter?: EthereumLogFilter;\n  @IsEnum(SubqlEthereumHandlerKind, {groups: [SubqlEthereumHandlerKind.FlareEvent, SubqlEthereumHandlerKind.EthEvent]})\n  kind: EthereumHandlerKind.Event;\n  @IsString()\n  handler: string;\n}\n\nexport class CustomHandler implements SubqlCustomHandler {\n  @IsString()\n  kind: string;\n  @IsString()\n  handler: string;\n  @IsObject()\n  @IsOptional()\n  filter?: Record<string, unknown>;\n}\n\nexport class EthereumMapping implements SubqlMapping {\n  @Transform((params) => {\n    const handlers: SubqlHandler[] = params.value;\n    return handlers.map((handler) => {\n      switch (handler.kind) {\n        case SubqlEthereumHandlerKind.FlareEvent:\n          return plainToClass(EventHandler, handler);\n        case SubqlEthereumHandlerKind.FlareCall:\n          return plainToClass(CallHandler, handler);\n        case SubqlEthereumHandlerKind.FlareBlock:\n          return plainToClass(BlockHandler, handler);\n        case SubqlEthereumHandlerKind.EthEvent:\n          return plainToClass(EventHandler, handler);\n        case SubqlEthereumHandlerKind.EthCall:\n          return plainToClass(CallHandler, handler);\n        case SubqlEthereumHandlerKind.EthBlock:\n          return plainToClass(BlockHandler, handler);\n        default:\n          throw new Error(`handler ${(handler as any).kind} not supported`);\n      }\n    });\n  })\n  @IsArray()\n  @ValidateNested()\n  handlers: SubqlHandler[];\n  @IsString()\n  file: string;\n}\n\nexport class CustomMapping implements SubqlMapping<SubqlCustomHandler> {\n  @IsArray()\n  @Type(() => CustomHandler)\n  @ValidateNested()\n  handlers: CustomHandler[];\n  @IsString()\n  file: string;\n}\n\nexport class EthereumProcessorOptions implements SubqlEthereumProcessorOptions {\n  @IsOptional()\n  @IsString()\n  abi?: string;\n  @IsOptional()\n  @IsEthereumAddress()\n  address?: string;\n}\n\nexport class RuntimeDataSourceBase<M extends SubqlMapping<SubqlRuntimeHandler>> implements SubqlRuntimeDatasource<M> {\n  @IsEnum(SubqlEthereumDatasourceKind, {\n    groups: [SubqlEthereumDatasourceKind.FlareRuntime, SubqlEthereumDatasourceKind.EthRuntime],\n  })\n  kind: EthereumDatasourceKind.Runtime;\n  @Type(() => EthereumMapping)\n  @ValidateNested()\n  mapping: M;\n  @IsOptional()\n  @IsInt()\n  startBlock?: number;\n  @IsOptional()\n  assets?: Map<string, FileReference>;\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => EthereumProcessorOptions)\n  options?: EthereumProcessorOptions;\n}\n\nexport class FileReferenceImpl implements FileReference {\n  @IsString()\n  file: string;\n}\n\nexport class CustomDataSourceBase<K extends string, M extends SubqlMapping = SubqlMapping<SubqlCustomHandler>>\n  implements SubqlCustomDatasource<K, M>\n{\n  @IsString()\n  kind: K;\n  @Type(() => CustomMapping)\n  @ValidateNested()\n  mapping: M;\n  @IsOptional()\n  @IsInt()\n  startBlock?: number;\n  @Type(() => FileReferenceImpl)\n  @ValidateNested({each: true})\n  assets: Map<string, CustomDataSourceAsset>;\n  @Type(() => FileReferenceImpl)\n  @IsObject()\n  processor: FileReference;\n  @IsOptional()\n  @ValidateNested()\n  options?: EthereumProcessorOptions;\n}\n"]}