import { BaseMapping, ProjectManifestBaseImpl } from '@subql/common';
import { NearCustomDatasource, NearNetworkFilter } from '@subql/types-near';
import { CustomDataSourceBase, RuntimeDataSourceBase } from '../../models';
import { CustomDatasourceV0_2_0, NearProjectManifestV0_2_0, RuntimeDataSourceV0_2_0 } from './types';
export declare class FileType {
    file: string;
}
export declare class ProjectNetworkDeploymentV0_2_0 {
    genesisHash: string;
    chaintypes?: FileType;
}
export declare class ProjectNetworkV0_2_0 extends ProjectNetworkDeploymentV0_2_0 {
    endpoint?: string;
    dictionary?: string;
}
export declare class NearRuntimeDataSourceV0_2_0Impl extends RuntimeDataSourceBase implements RuntimeDataSourceV0_2_0 {
    validate(): void;
}
export declare class NearCustomDataSourceV0_2_0Impl<K extends string = string, T extends NearNetworkFilter = NearNetworkFilter, M extends BaseMapping<any, any> = BaseMapping<Record<string, unknown>, any>> extends CustomDataSourceBase<K, T, M> implements NearCustomDatasource<K, T, M> {
    validate(): void;
}
export declare class DeploymentV0_2_0 {
    specVersion: string;
    schema: FileType;
    dataSources: (RuntimeDataSourceV0_2_0 | CustomDatasourceV0_2_0)[];
    network: ProjectNetworkDeploymentV0_2_0;
}
export declare class ProjectManifestV0_2_0Impl<D extends object = DeploymentV0_2_0> extends ProjectManifestBaseImpl<D> implements NearProjectManifestV0_2_0 {
    specVersion: string;
    name: string;
    version: string;
    network: ProjectNetworkV0_2_0;
    schema: FileType;
    dataSources: (RuntimeDataSourceV0_2_0 | CustomDatasourceV0_2_0)[];
    protected _deployment: D;
    get deployment(): D;
}
