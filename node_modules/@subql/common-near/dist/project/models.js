"use strict";
// Copyright 2020-2022 OnFinality Limited authors & contributors
// SPDX-License-Identifier: Apache-2.0
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomDataSourceBase = exports.FileReferenceImpl = exports.RuntimeDataSourceBase = exports.SubqlNetworkFilterImpl = exports.CustomMapping = exports.RuntimeMapping = exports.CustomHandler = exports.ReceiptHandler = exports.ActionHandler = exports.TransactionHandler = exports.BlockHandler = exports.ActionFilter = exports.ReceiptFilter = exports.IsActionType = exports.TransactionFilter = exports.BlockFilter = void 0;
const types_near_1 = require("@subql/types-near");
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
class BlockFilter {
}
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ArrayMaxSize)(2),
    __metadata("design:type", Array)
], BlockFilter.prototype, "specVersion", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], BlockFilter.prototype, "modulo", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], BlockFilter.prototype, "timestamp", void 0);
exports.BlockFilter = BlockFilter;
class TransactionFilter extends BlockFilter {
}
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], TransactionFilter.prototype, "sender", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], TransactionFilter.prototype, "receiver", void 0);
exports.TransactionFilter = TransactionFilter;
function IsActionType(validationOptions) {
    return function (object, propertyName) {
        (0, class_validator_1.registerDecorator)({
            name: 'isActionType',
            target: object.constructor,
            propertyName: propertyName,
            constraints: [],
            options: validationOptions,
            validator: {
                validate(value, args) {
                    return Object.values(types_near_1.ActionType).includes(value);
                },
            },
        });
    };
}
exports.IsActionType = IsActionType;
class ReceiptFilter extends TransactionFilter {
}
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ReceiptFilter.prototype, "signer", void 0);
exports.ReceiptFilter = ReceiptFilter;
class ActionFilter extends ReceiptFilter {
}
__decorate([
    (0, class_validator_1.IsString)(),
    IsActionType(),
    __metadata("design:type", String)
], ActionFilter.prototype, "type", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.ValidateIf)((o) => {
        return o.type === types_near_1.ActionType.FunctionCall;
    }),
    __metadata("design:type", String)
], ActionFilter.prototype, "methodName", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.ValidateIf)((o) => {
        return o.type === types_near_1.ActionType.FunctionCall;
    }),
    __metadata("design:type", String)
], ActionFilter.prototype, "args", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.ValidateIf)((o) => {
        return o.type === types_near_1.ActionType.Stake || o.type === types_near_1.ActionType.AddKey || o.type === types_near_1.ActionType.DeleteKey;
    }),
    __metadata("design:type", String)
], ActionFilter.prototype, "publicKey", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.ValidateIf)((o) => {
        return o.type === types_near_1.ActionType.AddKey;
    }),
    __metadata("design:type", String)
], ActionFilter.prototype, "accessKey", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.ValidateIf)((o) => {
        return o.type === types_near_1.ActionType.DeleteAccount;
    }),
    __metadata("design:type", String)
], ActionFilter.prototype, "beneficiaryId", void 0);
exports.ActionFilter = ActionFilter;
class BlockHandler {
}
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => BlockFilter),
    __metadata("design:type", Object)
], BlockHandler.prototype, "filter", void 0);
__decorate([
    (0, class_validator_1.IsEnum)(types_near_1.NearHandlerKind, { groups: [types_near_1.NearHandlerKind.Block] }),
    __metadata("design:type", String)
], BlockHandler.prototype, "kind", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], BlockHandler.prototype, "handler", void 0);
exports.BlockHandler = BlockHandler;
class TransactionHandler {
}
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => TransactionFilter),
    __metadata("design:type", Object)
], TransactionHandler.prototype, "filter", void 0);
__decorate([
    (0, class_validator_1.IsEnum)(types_near_1.NearHandlerKind, { groups: [types_near_1.NearHandlerKind.Transaction] }),
    __metadata("design:type", String)
], TransactionHandler.prototype, "kind", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], TransactionHandler.prototype, "handler", void 0);
exports.TransactionHandler = TransactionHandler;
class ActionHandler {
}
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => ActionFilter),
    __metadata("design:type", Object)
], ActionHandler.prototype, "filter", void 0);
__decorate([
    (0, class_validator_1.IsEnum)(types_near_1.NearHandlerKind, { groups: [types_near_1.NearHandlerKind.Action] }),
    __metadata("design:type", String)
], ActionHandler.prototype, "kind", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ActionHandler.prototype, "handler", void 0);
exports.ActionHandler = ActionHandler;
class ReceiptHandler {
}
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => ReceiptFilter),
    __metadata("design:type", Object)
], ReceiptHandler.prototype, "filter", void 0);
__decorate([
    (0, class_validator_1.IsEnum)(types_near_1.NearHandlerKind, { groups: [types_near_1.NearHandlerKind.Receipt] }),
    __metadata("design:type", String)
], ReceiptHandler.prototype, "kind", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ReceiptHandler.prototype, "handler", void 0);
exports.ReceiptHandler = ReceiptHandler;
class CustomHandler {
}
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomHandler.prototype, "kind", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomHandler.prototype, "handler", void 0);
__decorate([
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], CustomHandler.prototype, "filter", void 0);
exports.CustomHandler = CustomHandler;
class RuntimeMapping {
}
__decorate([
    (0, class_transformer_1.Transform)((params) => {
        const handlers = params.value;
        return handlers.map((handler) => {
            switch (handler.kind) {
                case types_near_1.NearHandlerKind.Receipt:
                    return (0, class_transformer_1.plainToClass)(ReceiptHandler, handler);
                case types_near_1.NearHandlerKind.Action:
                    return (0, class_transformer_1.plainToClass)(ActionHandler, handler);
                case types_near_1.NearHandlerKind.Transaction:
                    return (0, class_transformer_1.plainToClass)(TransactionHandler, handler);
                case types_near_1.NearHandlerKind.Block:
                    return (0, class_transformer_1.plainToClass)(BlockHandler, handler);
                default:
                    throw new Error(`handler ${handler.kind} not supported`);
            }
        });
    }),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)(),
    __metadata("design:type", Array)
], RuntimeMapping.prototype, "handlers", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], RuntimeMapping.prototype, "file", void 0);
exports.RuntimeMapping = RuntimeMapping;
class CustomMapping {
}
__decorate([
    (0, class_validator_1.IsArray)(),
    (0, class_transformer_1.Type)(() => CustomHandler),
    (0, class_validator_1.ValidateNested)(),
    __metadata("design:type", Array)
], CustomMapping.prototype, "handlers", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomMapping.prototype, "file", void 0);
exports.CustomMapping = CustomMapping;
class SubqlNetworkFilterImpl {
}
__decorate([
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], SubqlNetworkFilterImpl.prototype, "specName", void 0);
exports.SubqlNetworkFilterImpl = SubqlNetworkFilterImpl;
class RuntimeDataSourceBase {
}
__decorate([
    (0, class_validator_1.IsEnum)(types_near_1.NearDatasourceKind, { groups: [types_near_1.NearDatasourceKind.Runtime] }),
    __metadata("design:type", String)
], RuntimeDataSourceBase.prototype, "kind", void 0);
__decorate([
    (0, class_transformer_1.Type)(() => RuntimeMapping),
    (0, class_validator_1.ValidateNested)(),
    __metadata("design:type", RuntimeMapping)
], RuntimeDataSourceBase.prototype, "mapping", void 0);
__decorate([
    (0, class_validator_1.Min)(9820210),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], RuntimeDataSourceBase.prototype, "startBlock", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => SubqlNetworkFilterImpl),
    __metadata("design:type", Object)
], RuntimeDataSourceBase.prototype, "filter", void 0);
exports.RuntimeDataSourceBase = RuntimeDataSourceBase;
class FileReferenceImpl {
}
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], FileReferenceImpl.prototype, "file", void 0);
exports.FileReferenceImpl = FileReferenceImpl;
class CustomDataSourceBase {
}
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomDataSourceBase.prototype, "kind", void 0);
__decorate([
    (0, class_transformer_1.Type)(() => CustomMapping),
    (0, class_validator_1.ValidateNested)(),
    __metadata("design:type", Object)
], CustomDataSourceBase.prototype, "mapping", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], CustomDataSourceBase.prototype, "startBlock", void 0);
__decorate([
    (0, class_transformer_1.Type)(() => FileReferenceImpl),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Map)
], CustomDataSourceBase.prototype, "assets", void 0);
__decorate([
    (0, class_transformer_1.Type)(() => FileReferenceImpl),
    (0, class_validator_1.IsObject)(),
    __metadata("design:type", Object)
], CustomDataSourceBase.prototype, "processor", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsObject)(),
    __metadata("design:type", Object)
], CustomDataSourceBase.prototype, "filter", void 0);
exports.CustomDataSourceBase = CustomDataSourceBase;
//# sourceMappingURL=models.js.map